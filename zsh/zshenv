#!/usr/bin/env zsh

# for moving quickly
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias -- -="cd -"
alias ~="cd ~"
alias p="cd ~/Projects"

# A less noisy tree list
alias t="tree -I 'node_modules|.git|test|venv|env|target|build|out|.next' --noreport -C -a --dirsfirst"

# Use clipboard for xclip
alias xclip="xclip -selection clipboard"

# download with aria2 using 16 connections
alias a2c="aria2c -x16 -s16"

# make nested directories
alias mkdir="mkdir -p"

# common shortcuts
alias g="git"
alias vi="nvim"
alias vim="nvim"
alias py="python"

# shortcut for ytd
alias ytd="yt-dlp --external-downloader aria2c"
alias ytdm="yt-dlp -x --audio-format mp3 --audio-quality 0 --embed-thumbnail --add-metadata -o '%(title)s.%(ext)s'"

# better ls output using exa
alias la="exa -la --group-directories-first"
alias ll="exa -l --group-directories-first"
alias ls="exa"

# yarn shortcuts
alias yi="yarn"
alias ya="yarn add"
alias yd="yarn add --dev"
alias yu="yarn upgrade-interactive --latest"

# npm global alias
alias npmg="sudo npm -g"

# use apt-fast for apt
alias aptf="apt-fast"

# aliases for cloud tools
alias d="docker"
alias k="kubectl"
alias tf="terraform"

# sudoed aliases, shell reloading and pretty paths
alias sudo="sudo "
alias reload="exec $SHELL -l"
alias path="echo -e ${PATH//:/\\\n}"

# Update blocklist
function upblock {
  echo -n "Updating host files..."
  curl -fsSL "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn-social/hosts" | sudo tee /etc/hosts >/dev/null
  echo "Done."
}

# Update everything
function upall {
  sudo apt-get update
  sudo apt-get upgrade
  nvim +PlugUpdate +qa
  sudo npm up -g
}

# for moving quickly into my projects
function repo {
  REPO_PATH=$(find "$HOME/Projects" -mindepth 1 -maxdepth 2 -type d -name "$1" | head -n 1)
  if [[ -z $1 ]]; then
    cd "$REPO_BASE"
  else
    cd "$REPO_PATH"
  fi
}

# cleanup local docker mess
function dclean {
  # remove all stopped containers
  docker rm $(docker ps -qa) 2>/dev/null
  # remove all dangling images
  docker rmi $(docker images -qa --filter="dangling=true") 2>/dev/null
  # remove unused volumes
  docker volume prune -f
  # remove unused networks
  docker network prune -f
}
