#!/usr/bin/env bash

# Install neovim with coc.nvim

COC_EXT_PATH="$HOME/.config/coc/extensions"

# Include utilities
source /dev/stdin <<< "`curl -fsSL sh.mohitsingh.in/_utils`"

# Install dotfiles if not found
if [[ ! -d $DOTLOC ]]; then
  source /dev/stdin <<< "`curl -fsSL sh.mohitsingh.in/repo`"
fi

# setup nvim
doing "Linking nvim config..."
mkdir -p "$HOME/.config/nvim"
for file in $DOTLOC/nvim/*
do
  target="$HOME/.config/nvim/`basename $file`"
  [[ -e $target ]] && rm $target &>/dev/null
  ln -s $file $target
done
success

# Install coc extensions
doing "Installing coc extensions...\\n"

if [[ ! -d $COC_EXT_PATH ]]; then
  mkdir -p "$HOME/.config/coc/extensions"
fi

cd "$HOME/.config/coc/extensions"

if [[ ! -f package.json ]]; then
  echo '{"dependencies":{}}'> package.json
fi

# coc extensions I use
coc_extensions=(
  \ coc-go
  \ coc-rls
  \ coc-python
  \ coc-tsserver
  \ coc-vimlsp
  \ coc-html
  \ coc-css
  \ coc-json
  \ coc-yaml
  \ coc-git
  \ coc-eslint
  \ coc-prettier
  \ coc-snippets
  \ )

flags="--global-style --ignore-scripts --no-bin-links --no-package-lock --only=prod"

for ext in ${coc_extensions[*]};
do
  printf "\\033[2m      Installing %s\\033[0m" "$ext"
  npm install $flags $ext &>/dev/null
  # clear current line
  printf "\\r\\033[K"
done
# move cursor to end of previous line
printf "\\033[1A\\033[32C"
success
