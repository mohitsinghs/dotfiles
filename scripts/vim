#!/bin/bash
# Setup neovim with coc and other plugins
#
# Usage: curl -fsSL sh.mohitsingh.in/vim | bash
#
# Make sure that neovim and nodejs are available

source /dev/stdin <<< "`curl -fsSL sh.mohitsingh.in/_utils`"

# install dotfiles if not found
DOTLOC="$HOME/Projects/dotfiles"
if [[ ! -d $DOTLOC ]]; then
  source /dev/stdin <<< "`curl -fsSL sh.mohitsingh.in/repo`"
fi

# setup nvim config
doing "Linking nvim config..."
mkdir -p "$HOME/.config/nvim"
for file in $DOTLOC/nvim/*
do
  target="$HOME/.config/nvim/`basename $file`"
  [[ -e $target ]] && rm $target &>/dev/null
  ln -s $file $target
done
success

# setup python3 provider for neovim in a venv
doing "Setting up python provider..."
cd ~/.config/nvim
( python3 -m venv py3env && source ./py3env/bin/activate && ./py3env/bin/pip install pynvim flake8 black &>/dev/null )
cd -
success

# path of coc extensions
COC_EXT_PATH="$HOME/.config/coc/extensions"

# list of coc extensions to install
coc_extensions=(
  \ coc-go
  \ coc-rust-analyzer
  \ coc-python
  \ coc-tsserver
  \ coc-vimlsp
  \ coc-html
  \ coc-css
  \ coc-tailwindcss
  \ coc-json
  \ coc-yaml
  \ coc-git
  \ coc-docker
  \ coc-sql
  \ coc-eslint
  \ coc-prettier
  \ coc-snippets
  \ coc-emmet
  \ )

# flags to use while installing extensions
flags="--global-style --ignore-scripts --no-bin-links --no-package-lock --only=prod"

# install coc extensions
doing "Installing coc extensions...\\n"
if [[ ! -d $COC_EXT_PATH ]]; then
  mkdir -p "$HOME/.config/coc/extensions"
fi
cd "$HOME/.config/coc/extensions"
if [[ ! -f package.json ]]; then
  echo '{"dependencies":{}}'> package.json
fi
for ext in ${coc_extensions[*]};
do
  printf "\\033[2m      Installing %s\\033[0m" "$ext"
  npm install $flags $ext &>/dev/null
  # clear current line
  printf "\\r\\033[K"
done
# move cursor to end of previous line
printf "\\033[1A\\033[32C"
success

